{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Bio.js","webpack:///./node_modules/core-js/modules/es6.string.fixed.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","_components_Bio__WEBPACK_IMPORTED_MODULE_3__","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography","Typography","scaleRatio","baseLineHeight","headerFontFamily","bodyFontFamily","googleFonts","name","styles","overrideThemeStyles","options","adjustFontSizeTo","blockquote","backgroundColor","padding","borderLeft","margin","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","__PATH_PREFIX__","react__WEBPACK_IMPORTED_MODULE_2___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","borderTop","Date","getFullYear","href","target","rel","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Bio","_data$site$siteMetada","social","display","backgroundImage","avatar","childImageSharp","fixed","src","backgroundRepeat","backgroundPosition","backgroundSize","paddingLeft","height","alignItems","_public_static_d_225320178_json__WEBPACK_IMPORTED_MODULE_1__","createHTML","$export","fails","defined","quot","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split"],"mappings":"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","file":"component---src-pages-index-js-dbf940e4223b8f9cc8f3.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\n\nconst typography = new Typography({\n  scaleRatio: 2,\n  baseLineHeight: 1.5,\n  headerFontFamily: ['Merriweather', 'georgia', 'serif'],\n  bodyFontFamily: ['Roboto', 'Helvetica', 'Arial', 'sans-serif'],\n  googleFonts: [\n    {\n      name: 'Merriweather',\n      styles: ['700'],\n    },\n    {\n      name: 'Roboto',\n      styles: ['400', '400i', '500', '500i'],\n    },\n  ],\n  overrideThemeStyles: ({ adjustFontSizeTo, rhythm }, options, styles) => ({\n    blockquote: {\n      backgroundColor: '#eee',\n      padding: '10px',\n      borderLeft: '5px solid #999',\n      margin: 0,\n    },\n  }),\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(30),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {header}\n        {children}\n        <footer\n          style={{\n            borderTop: '2px solid #eee',\n            padding: '1.5rem 0',\n          }}\n        >\n          <small>\n            &copy; {new Date().getFullYear()} Local.com.pk &ndash;{' '}\n            <a\n              href=\"https://www.facebook.com/localpakistan\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              Facebook\n            </a>{' '}\n            |{' '}\n            <a\n              href=\"https://www.twitter.com/jabranr\"\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              Twitter (@jabranr)\n            </a>\n          </small>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, description, social } = data.site.siteMetadata\n        return (\n          <div style={{ display: `flex`, marginBottom: rhythm(2.5) }}>\n            <div\n              style={{\n                display: 'flex',\n                backgroundImage: `url(${\n                  data.avatar.childImageSharp.fixed.src\n                })`,\n                backgroundRepeat: 'no-repeat',\n                backgroundPosition: 'left center',\n                backgroundSize: '50px',\n                paddingLeft: '60px',\n                marginBottom: '0',\n                height: '50px',\n                alignItems: 'center',\n              }}\n            >\n              {`${description}`}\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/pakistan_emblem.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","'use strict';\n// B.2.3.6 String.prototype.fixed()\nrequire('./_string-html')('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}